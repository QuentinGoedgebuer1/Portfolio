pipeline {
    agent any

    environment {
        IMAGE_NAME = 'portfolio-app' // Nom de l'image Docker à construire
        IMAGE_TAG = 'latest'           // Tag de l'image Docker (par exemple, latest)
        PORT = '4200'             // Port de l'application
        API_POLYGON = credentials('API_POLYGON') // Mot de passe de la base de données
    }
    stages {
        stage('Generate Angular Environment File') {
            steps {
                script {
                    // Créer un fichier environment.prod.ts avec la clé API
                    sh '''
                    echo "export const environment = {" > src/environments/environment.prod.ts
                    echo "    production: true," >> src/environments/environment.prod.ts
                    echo "    apiKey: \\"$API_POLYGON\\"" >> src/environments/environment.prod.ts
                    echo "};" >> src/environments/environment.prod.ts
                    '''
                }
            }
        }
        stage('Delete Docker container') {
            steps {
                script {
                    // Construction de l'image Docker
                    sh """
                    docker rm -f ${IMAGE_NAME}
                    """
                }
            }
        }
        stage('Build Docker Image') {
            steps {
                script {
                    // Construction de l'image Docker
                    sh """
                    docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
                    """
                }
            }
        }
        stage('Run Docker Container') {
            steps {
                script {
                    // Exécution de l'image Docker en tant que conteneur
                    sh """
                    docker run -d --name portfolio-app -p ${PORT}:4200 ${IMAGE_NAME}:${IMAGE_TAG}
                    """
                }
            }
        }
    }
    post {
        always {
            echo 'Pipeline terminé.'
        }
    }
}